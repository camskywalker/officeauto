<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lizijian.officeauto.mapper.UserMapper">

    <select id="getUserByUsername" resultMap="userMap">
        select
            user.id as id,
            username as username,
            email as email,
            admin_id as adminId,
            user.password as password,
            role.nameZh as rolennameZh,
            role.id as rid,
            role.name as rolename
        from user
        left join user_role on user.id = user_role.uid
        left join role on user_role.rid = role.id
        where username=#{username};
    </select>

    <select id="getUserRolesByUid" resultType="com.lizijian.officeauto.pojo.Role">
        select *
        from role, user_role
        where role.id=user_role.rid and user_role.uid=#{id};
    </select>

    <select id="getUserByUserId" resultType="com.lizijian.officeauto.pojo.User">
        select *
        from user
        where user.id = #{userId};
    </select>

    <insert id="insertUser" parameterType="com.lizijian.officeauto.pojo.User" useGeneratedKeys="true" keyProperty="id">
        insert into user(username, password, email, admin_id)
        values (#{username}, #{password}, #{email}, #{adminId})
    </insert>

    <delete id="deleteUserByUserId">
        delete from user
        where id=#{id}
    </delete>

    <update id="updateUser" parameterType="com.lizijian.officeauto.pojo.User">
        update user
        <set>
            <if test="username != null">username = #{username} ,</if>
            <if test="email != null">email = #{email} ,</if>
            <if test="adminId != null">admin_id = #{adminId} ,</if>
            <if test="password != null">password = #{password} </if>
        </set>
        where id=#{id};
    </update>

    <select id="getUsersByAdminId" resultMap="userMap" >
        select
               user.id as id,
               username as username,
               email as email,
               admin_id as adminId,
               role.nameZh as rolennameZh,
               role.id as rid,
               role.name as rolename
        from user
        left join user_role on user.id = user_role.uid
        left join role on user_role.rid = role.id
        where admin_id=#{adminId}
    </select>
    <resultMap id="userMap" type="User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="adminId" column="adminId"/>
        <result property="password" column="password"/>
        <collection property="roles" javaType="list" ofType="Role">
            <id property="id" column="rid"/>
            <result property="name" column="rolename"/>
            <result property="nameZh" column="rolennameZh"/>
        </collection>
    </resultMap>

    <select id="getUserByCourseId" resultMap="userMap" >
        select user.id as id,
               username as username,
               email as email,
               admin_id as adminId,
               role.nameZh as rolennameZh,
               role.id as rid,
               role.name as rolename
        from user
        join course_user on user.id = course_user.user_id
        left join user_role on user.id = user_role.uid
        left join role on user_role.rid = role.id
        where course_user.course_id = #{courseId}

    </select>

</mapper>